{"version":3,"sources":["icons/united-kingdom.svg","icons/germany.svg","icons/italy.svg","icons/spain.svg","icons/japan.svg","icons/south-korea.svg","icons/china.svg","icons/france.svg","icons/sign-in.svg","icons/github-logo.svg","components/Navbar/Navbar.js","components/Homepage/Homepage.js","components/About/About.js","components/Docs/Docs.js","components/Footer/Footer.js","components/GitHubButton/GitHubButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","setActivePage","activePage","screenWidth","className","to","onClick","e","Homepage","state","result","inputValue","isLoading","fetchResults","link","setState","fetch","then","res","status","json","data","toString","JSON","stringify","msg","catch","err","handleInput","target","value","handleSubmit","handleLinkClick","url","preventDefault","src","uk","alt","de","fr","it","es","jp","kr","cn","props","class","href","rel","this","type","placeholder","onChange","disabled","signIn","Component","About","id","Docs","Footer","GitHubButton","title","github","App","undefined","newPage","setActivePageOnLoad","window","location","pathname","handleResize","innerWidth","addEventListener","removeEventListener","path","exact","push","horizontalWidth","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a30d084.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/united-kingdom.e5564902.svg\";","module.exports = __webpack_public_path__ + \"static/media/germany.d810f621.svg\";","module.exports = __webpack_public_path__ + \"static/media/italy.612e617f.svg\";","module.exports = __webpack_public_path__ + \"static/media/spain.36938bbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/japan.1f905d23.svg\";","module.exports = __webpack_public_path__ + \"static/media/south-korea.8a067f19.svg\";","module.exports = __webpack_public_path__ + \"static/media/china.7f8455b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/france.968aaa24.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in.7a910bbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","import React from 'react'\r\n\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default function Navbar({ setActivePage, activePage, screenWidth }) {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-wrapper\">\r\n                {screenWidth > 599 // Don't show the logo if on mobile\r\n                    ? (\r\n                    <div className=\"navbar-logo\">\r\n                        <h1>\r\n                            <Link \r\n                                className={\"navbar-menu-item\" + (activePage === 'homepage' ? ' active' : '')}\r\n                                to=\"/\"\r\n                                onClick={(e) => {\r\n                                    setActivePage(\"homepage\")\r\n                                }} \r\n                            >\r\n                                Pok√©LANG\r\n                            </Link>\r\n                        </h1>\r\n                    </div>\r\n                    )\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"navbar-menu\">\r\n                    <Link \r\n                        className={\"navbar-menu-item\" + (activePage === 'homepage' ? ' active' : '')}\r\n                        to=\"/\"\r\n                        onClick={(e) => {\r\n                            setActivePage(\"homepage\")\r\n                        }} \r\n                    >\r\n                        Home\r\n                    </Link>\r\n                    <Link \r\n                        className={\"navbar-menu-item\" + (activePage === 'about' ? ' active' : '')} \r\n                        to=\"/about\"\r\n                        onClick={(e) => {\r\n                            setActivePage(\"about\")\r\n                        }}\r\n                    >\r\n                        About\r\n                    </Link>\r\n                    <Link \r\n                        className={\"navbar-menu-item\" + (activePage === 'docs' ? ' active' : '')}\r\n                        to=\"/docs\"\r\n                        onClick={(e) => {\r\n                            setActivePage(\"docs\")\r\n                        }}\r\n                    >\r\n                        Docs\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport uk from '../../icons/united-kingdom.svg'\r\nimport de from '../../icons/germany.svg'\r\nimport it from '../../icons/italy.svg'\r\nimport es from '../../icons/spain.svg'\r\nimport jp from '../../icons/japan.svg'\r\nimport kr from '../../icons/south-korea.svg'\r\nimport cn from '../../icons/china.svg'\r\nimport fr from '../../icons/france.svg'\r\n\r\nimport signIn from '../../icons/sign-in.svg'\r\n\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default class Homepage extends Component {\r\n    state = {\r\n        result: \"No results yet\",\r\n        inputValue: \"\",\r\n        isLoading: false\r\n    }\r\n\r\n    fetchResults = () => {\r\n        const link = \"https://pokedex-languages-api.herokuapp.com/\" + this.state.inputValue\r\n\r\n        if(this.state.isLoading) {\r\n            return\r\n        } else {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n        }\r\n\r\n        fetch(link)\r\n            .then(res => {\r\n                if(res.status !== 200) {\r\n                    res.json()\r\n                        .then(data => {\r\n                            this.setState({\r\n                                result: \"Error: \" + res.status.toString() + \" - \" + JSON.stringify(data.msg),\r\n                                isLoading: false\r\n                            })\r\n                        })\r\n                } else {\r\n                    res.json()\r\n                        .then(data => {\r\n                            this.setState({\r\n                                result: JSON.stringify(data, null, 2),\r\n                                isLoading: false\r\n                            })\r\n                        })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    result: \"Failed to fetch. Service may be unavailable (503 Status Code)\",\r\n                    isLoading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        this.fetchResults()\r\n    }\r\n\r\n    handleLinkClick = url => e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            inputValue: url\r\n        }, () => {\r\n            this.handleSubmit()\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <div className=\"jumbotron\">\r\n                    <h1>Pok√©LANG API</h1>\r\n                    <h2>A RESTful API with Pok√©mon' names in various languages</h2>\r\n                    <div className=\"jumbotron-flags\">\r\n                        <img src={uk} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={de} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={fr} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={it} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={es} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={jp} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={kr} alt=\"\" className=\"flag-icon\"/>\r\n                        <img src={cn} alt=\"\" className=\"flag-icon\"/>\r\n                    </div>\r\n                </div>\r\n                <h1>Try it now!</h1>\r\n                <h3>And <Link \r\n                            to=\"/docs\"\r\n                            onClick={(e) => {\r\n                                this.props.setActivePage(\"docs\")\r\n                            }}\r\n                        >check out the docs!</Link></h3>\r\n                <div className=\"demo-box\">\r\n                    <div className=\"input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <a \r\n                                href=\"https://pokedex-languages-api.herokuapp.com/\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                {this.props.screenWidth > 599 // Shorten the prepend if on mobile\r\n                                    ? (\r\n                                        \"https://pokedex-languages-api.herokuapp.com/\"\r\n                                    )\r\n                                    :\r\n                                        \".../\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\" \r\n                            placeholder=\"pokemon/resource\"\r\n                            value={this.state.inputValue}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                        <button \r\n                            class=\"input-group-button\"\r\n                            onClick={this.handleSubmit}\r\n                            disabled={this.state.isLoading}\r\n                        >\r\n                            <img src={signIn} alt=\"\"></img>\r\n                        </button>\r\n                        <br/>\r\n                    </div>\r\n                    <p>Try: <a href=\"#\" onClick={this.handleLinkClick(\"pokemon\")}>/pokemon </a>, <a href=\"#\" onClick={this.handleLinkClick(\"pokemon/roserade\")}>pokemon/roserade</a>, <a href=\"#\" onClick={this.handleLinkClick(\"pokemon/420\")}>pokemon/420</a>, <a href=\"#\" onClick={this.handleLinkClick(\"pokemon/roserade/fr\")}>pokemon/roserade/fr</a>\r\n                    </p>\r\n                    <h2>Response</h2>\r\n                    <div className=\"demo-box-result\">\r\n                        <pre className={this.state.isLoading ? \"spinner\" : \"\"}>\r\n                            <code>\r\n                                {this.state.isLoading \r\n                                    ?\r\n                                    <div>\r\n                                        <div class=\"lds-ring\">\r\n                                            <div></div><div></div><div></div><div></div>\r\n                                        </div>\r\n                                        <p>Fetching...</p>\r\n                                    </div>\r\n                                    :\r\n                                    this.state.result\r\n                                }\r\n                            </code>\r\n                        </pre>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <div className=\"about\">\r\n            <div className=\"pageWrapper\">\r\n                <div className=\"tableOfContents-sticky\">\r\n                    <div className=\"tableOfContents-wrapper tableOfContents-wrapper-docs \">\r\n                        <div className=\"tableOfContents\">\r\n                            <ul>\r\n                                <h2>Pok√©mon</h2>\r\n                                <li><a href=\"#path1\">GET /pokemon/</a></li>\r\n                                <li><a href=\"#path2\">{\"GET /pokemon/{pokemon_id}\"}</a></li>\r\n                                <li><a href=\"#path3\">{\"GET /pokemon/{pokemon_name}\"}</a></li>\r\n                                <li><a href=\"#path4\">{\"GET /pokemon/{pokemon_id}/{language}\"}</a></li>\r\n                                <li><a href=\"#path5\">{\"GET /pokemon/{pokemon_name}/{language}\"}</a></li>\r\n                                <h2>Other</h2>\r\n                                <li><a href=\"#path6\">GET /</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h1>\r\n                        About\r\n                    </h1>\r\n                    <h2 id=\"about-q1\">\r\n                        What is this?\r\n                    </h2>\r\n                    <p>\r\n                        This website provides a RESTful, GET-Only API interface to retrieve Pok√©mon' names in different languages. Using this website, you can learn how to use this API to get data you need.\r\n                    </p>\r\n                    <h2 id=\"about-q2\">\r\n                        What is an API?\r\n                    </h2>\r\n                    <p>\r\n                        An API (Application Programming Interface) is a contract that allow developers to interact with an application through a set of interfaces. In this case, the application is a database of Pok√©mon names in various languages.\r\n                        <br/>\r\n                        <br/>\r\n                        A RESTful API is an API that conforms to a set of loose conventions based on HTTP verbs, errors, and hyperlinks.\r\n                    </p>\r\n                    <h2 id=\"about-q3\">\r\n                        How much information is stored here?\r\n                    </h2>\r\n                    <p>\r\n                        All Pok√©mon names up to 7th generation.\r\n                    </p>\r\n                    <img src=\"https://i.kym-cdn.com/photos/images/original/001/150/490/507.jpg\" alt=\"\"/>\r\n                    <h2 id=\"about-q4\">\r\n                        So who built this?\r\n                    </h2>\r\n                    <p>\r\n                        This page was created by Jakub Moryc as a part of his learning routine.\r\n                        <br/>\r\n                        <br/>\r\n                        Check out his portfolio as well as his <a href=\"https://github.com/jakubmoryc\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub page</a> for more projects.\r\n                    </p>\r\n                    <h2 id=\"about-q5\">\r\n                        Where did you get all of this data?\r\n                    </h2>\r\n                    <p>\r\n                        I took a few CSV files from <a href=\"https://github.com/PokeAPI/pokeapi\" target=\"_blank\" rel=\"noopener noreferrer\">Pok√©API's GitHub</a> and combined them into one big array of objects (in fact, my other app uses that array on it's client side) and uploaded it to a database.\r\n                    </p>\r\n                    <h2 id=\"about-q6\">\r\n                        What's the technology stack?\r\n                    </h2>\r\n                    <p>\r\n                        This page itself uses React.js and SASS.\r\n                        <br/>\r\n                        <br/>\r\n                        The API was built with Node, Express.js and MongoDB and it uses Atlas as it's database host whilst the app itself is hosted on Heroku.\r\n                    </p>\r\n                    <h2 id=\"about-q7\">\r\n                    Are there any known bugs?\r\n                    </h2>\r\n                    <p>\r\n                        You can't retrieve data if Pok√©mon's name includes a hyphen (-). For example Type-Null. For these Pok√©mon, I recommend using their IDs.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Docs() {\r\n\r\n    return (\r\n        <div className=\"docs\">\r\n            <div className=\"pageWrapper page-docs\">\r\n                <div className=\"tableOfContents-sticky\">\r\n                    <div className=\"tableOfContents-wrapper tableOfContents-wrapper-docs \">\r\n                        <div className=\"tableOfContents\">\r\n                            <ul>\r\n                                <h2>Pok√©mon</h2>\r\n                                <li><a href=\"#path1\">GET /pokemon/</a></li>\r\n                                <li><a href=\"#path2\">{\"GET /pokemon/{pokemon_id}\"}</a></li>\r\n                                <li><a href=\"#path3\">{\"GET /pokemon/{pokemon_name}\"}</a></li>\r\n                                <li><a href=\"#path4\">{\"GET /pokemon/{pokemon_id}/{language}\"}</a></li>\r\n                                <li><a href=\"#path5\">{\"GET /pokemon/{pokemon_name}/{language}\"}</a></li>\r\n                                <h2>Other</h2>\r\n                                <li><a href=\"#path6\">GET /</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content content-docs\">\r\n                    <h1 className=\"big-header\">Pok√©mon Routes</h1>\r\n\r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> /pokemon/</h2>\r\n                        <p>Fetch data with all Pok√©mon or search many Pok√©mon using a string.</p>\r\n                        <div className=\"path-parameters\">\r\n                            <h3 className=\"parameters-header\">\r\n                                <p>Query Parameters</p>\r\n                            </h3>\r\n                            <ul>\r\n                                <li>limit - Number of Pok√©mon to limit. Default - 20. <span className=\"path-type-span\">integer</span></li>\r\n                                <li>page - Pagination. Default - 0. <span className=\"path-type-span\">integer</span></li>\r\n                                <br></br>\r\n                                <li>search - Optional. If present - search Pok√©mon English names with a given string. Case insensitive. Hypens (-) are not supported and spaces should be encoded as '%20'. <span className=\"path-type-span\">string</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> {\"pokemon/{pokemon_id}\"}</h2>\r\n                        <p>Fetch specific Pok√©mon data by its ID.</p>\r\n                        <div className=\"path-parameters\">\r\n                            <h3 className=\"parameters-header\">\r\n                                <p>Path Parameters</p>\r\n                            </h3>\r\n                            <ul>\r\n                                <li>pokemon_id - Pok√©mon's ID. Max 3 digits. <span className=\"path-type-span\">integer</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> {\"pokemon/{pokemon_name}\"}</h2>\r\n                        <p>Fetch specific Pok√©mon data by its English name.</p>\r\n                        <div className=\"path-parameters\">\r\n                            <h3 className=\"parameters-header\">\r\n                                <p>Path Parameters</p>\r\n                            </h3>\r\n                            <ul>\r\n                                <li>pokemon_name - Pok√©mon's name in English. Case insensitive. Doesn't support hyphens (-) and spaces should be encoded as '%20'. <span className=\"path-type-span\">string</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> {\"pokemon/{pokemon_id}/{language}\"}</h2>\r\n                        <p>Fetch Pok√©mon's name in specified language or it's sprite/ID/name.</p>\r\n                        <div className=\"path-parameters\">\r\n                            <h3 className=\"parameters-header\">\r\n                                <p>Path Parameters</p>\r\n                            </h3>\r\n                            <ul>\r\n                                <li>pokemon_id - Pok√©mon's ID. Max 3 digits. <span className=\"path-type-span\">integer</span> <span className=\"path-required-span\">required</span></li>\r\n                                <li>language - Language to fetch or other subresource (sprite/id): <span className=\"path-type-span\">string</span>\r\n                                    <ul>\r\n                                        <li>us - English</li>\r\n                                        <li>de - German</li>\r\n                                        <li>fr - French</li>\r\n                                        <li>it - Italian</li>\r\n                                        <li>es - Spanish</li>\r\n                                        <li>jp - Japanese</li>\r\n                                        <li>kr - Korean</li>\r\n                                        <li>cn - Traditional Chinese</li>\r\n                                        <li>jp - Japanese</li>\r\n                                        <li>sprite - URL to Pok√©mon's sprite</li>\r\n                                        <li>id - Pok√©mon's ID</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> {\"pokemon/{pokemon_name}/{language}\"}</h2>\r\n                        <p>Fetch Pok√©mon's name in specified language or it's sprite/ID/name.</p>\r\n                        <div className=\"path-parameters\">\r\n                            <h3 className=\"parameters-header\">\r\n                                <p>Path Parameters</p>\r\n                            </h3>\r\n                            <ul>\r\n                                <li>pokemon_name - Pok√©mon's name in English. Case insensitive. Doesn't support hyphens (-) and spaces should be encoded as '%20'. <span className=\"path-type-span\">integer</span> <span className=\"path-required-span\">required</span></li>\r\n                                <li>language - Language to fetch or other subresource (sprite/id): <span className=\"path-type-span\">string</span>\r\n                                    <ul>\r\n                                        <li>us - English</li>\r\n                                        <li>de - German</li>\r\n                                        <li>fr - French</li>\r\n                                        <li>it - Italian</li>\r\n                                        <li>es - Spanish</li>\r\n                                        <li>jp - Japanese</li>\r\n                                        <li>kr - Korean</li>\r\n                                        <li>cn - Traditional Chinese</li>\r\n                                        <li>jp - Japanese</li>\r\n                                        <li>sprite - URL to Pok√©mon's sprite</li>\r\n                                        <li>id - Pok√©mon's ID</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <h1 className=\"big-header\">Other Routes</h1>\r\n\r\n                    <div className=\"path\">\r\n                        <h2><span className=\"path-get-span\">GET</span> /</h2>\r\n                        <p>Fetch API's version and link to GitHub</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                <span>&#9400; 2019 Jakub Moryc </span>\r\n                <span><a href=\"#\">See my portfolio </a></span>\r\n                <span>Pok√©mon and Pok√©mon character names are trademarks of Nintendo. </span>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport github from '../../icons/github-logo.svg'\r\n\r\nexport default function GitHubButton() {\r\n    return (\r\n            <a  className=\"github-button\"  \r\n                href=\"https://github.com/jakubmoryc/pokelang-rest-api-documentation\" \r\n                target=\"_blank\" rel=\"noopener noreferrer\" \r\n                title=\"See code on GitHub\"\r\n            >\r\n                <div>\r\n                    <img src={github}alt=\"\"></img>\r\n                </div>\r\n            </a>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './css/app.css';\n\nimport Navbar from './components/Navbar/Navbar';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Homepage from './components/Homepage/Homepage';\nimport About from './components/About/About';\nimport Docs from './components/Docs/Docs';\nimport Footer from './components/Footer/Footer';\n\nimport GitHubButton from './components/GitHubButton/GitHubButton'\n\nclass App extends React.Component {\n  state = {\n    activePage: \"homepage\",\n    screenWidth: undefined\n  }\n\n  setActivePage = (newPage) => {\n    this.setState({\n      activePage: newPage\n    })\n  }\n\n  setActivePageOnLoad = () => {\n    switch (window.location.pathname) {\n      case \"/\":\n        this.setState({\n          activePage: \"homepage\"\n        })\n        break;\n      case \"/about\":\n        this.setState({\n          activePage: \"about\"\n        })\n        break;\n      case \"/docs\":\n        this.setState({\n          activePage: \"docs\"\n        })\n        break;\n      default:\n        this.setState({\n          activePage: \"homepage\"\n        })\n        break; \n    }\n  }\n\n  handleResize = () => {\n    this.setState({\n      screenWidth: window.innerWidth\n    })\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize)\n\n    this.handleResize()\n\n    this.setActivePageOnLoad()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar \n            setActivePage={this.setActivePage}\n            activePage={this.state.activePage}\n            screenWidth={this.state.screenWidth}\n          />\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/docs\">\n              <Docs/>\n            </Route>\n            <Route path=\"/about\">\n              <About/>\n            </Route>\n            <Route path=\"/\" exact>\n              <Homepage \n                screenWidth={this.state.screenWidth} \n                setActivePage={this.setActivePage}\n              />\n            </Route>\n            <Route path=\"*\">\n              <Redirect push to=\"/\"/>\n            </Route>\n          </Switch>\n          <Footer/>\n          {this.state.horizontalWidth}\n        </div>\n        <GitHubButton/>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}